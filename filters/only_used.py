################################################################################
#                                                                              #
#   This file is part of the Bibolamazi Project.                               #
#   Copyright (C) 2013 by Philippe Faist                                       #
#   philippe.faist@bluewin.ch                                                  #
#                                                                              #
#   Bibolamazi is free software: you can redistribute it and/or modify         #
#   it under the terms of the GNU General Public License as published by       #
#   the Free Software Foundation, either version 3 of the License, or          #
#   (at your option) any later version.                                        #
#                                                                              #
#   Bibolamazi is distributed in the hope that it will be useful,              #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of             #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              #
#   GNU General Public License for more details.                               #
#                                                                              #
#   You should have received a copy of the GNU General Public License          #
#   along with Bibolamazi.  If not, see <http://www.gnu.org/licenses/>.        #
#                                                                              #
################################################################################


from pybtex.utils import OrderedCaseInsensitiveDict

from core.bibfilter import BibFilter, BibFilterError;
from core.blogger import logger;

from .util import auxfile

HELP_AUTHOR = u"""\
only_used filter by Philippe Faist, (C) 2013, GPL 3+
"""

HELP_DESC = u"""\
Filter that keeps only BibTeX entries which are referenced in the LaTeX document
"""

HELP_TEXT = u"""
... write me ....

Note: might interfere with `duplicates' filter! think twice. (maybe use this filter first, then duplicates?)

"""



class OnlyUsedFilter(BibFilter):

    helpauthor = HELP_AUTHOR
    helpdescription = HELP_DESC
    helptext = HELP_TEXT

    def __init__(self, jobname, search_dirs=[]):
        """OnlyUsedFilter constructor.

        Arguments:
          - jobname: the base name of the latex file. Will search for jobname.aux and look for
                     \citation{..} commands as they are generated by latex.
          - search_dirs(list): the .aux file will be searched for in this list of directories
        """

        BibFilter.__init__(self);

        self.jobname = jobname
        self.search_dirs = search_dirs

        if (not self.search_dirs):
            self.search_dirs = ['.', '_cleanlatexfiles'] # also for my cleanlatex utility :)

        logger.debug('only_used: jobname=%r' % (jobname,));


    def name(self):
        return "only_used"

    def getRunningMessage(self):
        return u"only_used: filtering entries ..."

    
    def action(self):
        return BibFilter.BIB_FILTER_BIBOLAMAZIFILE;


    def filter_bibolamazifile(self, bibolamazifile):

        logger.debug("Getting list of used citations from %s.aux." %(self.jobname))

        citations = auxfile.get_all_auxfile_citations(self.jobname, bibolamazifile, self.name(), self.search_dirs,
                                                      return_set=True);

        logger.longdebug("set of citations: %r"%(citations))


        bibdata = bibolamazifile.bibliographydata()
        
        newentries = OrderedCaseInsensitiveDict()

        for key,entry in bibdata.entries.iteritems():
            if key in citations:
                newentries[key] = entry

        logger.longdebug("the new database has entries %r" %(newentries.keys()))

        bibolamazifile.setEntries(newentries.iteritems())

        return


def bibolamazi_filter_class():
    return OnlyUsedFilter;


